name: Deploy to Cloudflare Pages

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Choose an environment to deploy to:"
        required: true
        default: "staging"
        type: choice
        options:
          - staging
          - production
  push:
    branches:
      - main
  release:
    types: [released]

permissions:
  contents: read
  deployments: write
  pull-requests: write

env:
  IS_PRODUCTION: ${{ github.event.inputs.environment == 'production' || github.event_name == 'release' }}

jobs:
  dump:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub Context
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: echo "$GITHUB_CONTEXT"

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install

      - name: Build
        env:
          VITE_API_URL: ${{ env.IS_PRODUCTION == 'true' && vars.VITE_API_URL_PRODUCTION || vars.VITE_API_URL_STAGING }}
        run: pnpm build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: ./dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-files
          path: ./dist

      - uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          packageManager: pnpm
          command: |
            pages deploy dist --project-name=kaget --branch=${{ env.IS_PRODUCTION == 'true' && 'production' || 'main' }}
